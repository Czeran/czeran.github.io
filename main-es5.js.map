{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/views/raid-bosses-table/raid-bosses-table.component.ts","webpack:///src/app/views/raid-bosses-table/raid-bosses-table.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","RaidBossesTableComponent","wings","name","bosses","done","borders","calculateBorders","wingIndex","bossIndex","boss","console","log","wing","i","length","bossesCount","map","reduce","previousValue","currentValue","style","push","changeDetection","OnPush","environment","production","bootstrapModule","err","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import {NgModule} from '@angular/core';\nimport {Routes, RouterModule} from '@angular/router';\nimport {RaidBossesTableComponent} from './views/raid-bosses-table/raid-bosses-table.component';\n\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: RaidBossesTableComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {\n}\n","import {Component} from '@angular/core'\n\n@Component({\n    selector: 'app-root',\n    templateUrl: './app.component.html',\n    styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n    title = 'character-creator'\n}\n","<!--The content below is only a placeholder and can be replaced.-->\n<div class=\"app\">\n  <router-outlet></router-outlet>\n</div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { RaidBossesTableComponent } from './views/raid-bosses-table/raid-bosses-table.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    RaidBossesTableComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import {ChangeDetectionStrategy, Component, OnInit} from '@angular/core'\n\n@Component({\n  selector: 'app-raid-bosses-table',\n  templateUrl: './raid-bosses-table.component.html',\n  styleUrls: ['./raid-bosses-table.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class RaidBossesTableComponent implements OnInit {\n\n  wings = [\n    {\n      name: 'W1',\n      bosses: [\n        {\n          name: 'Vale Guardian',\n          done: false,\n        },\n        {\n          name: 'Gorseval the Multifarious',\n          done: false,\n        },\n        {\n          name: 'Sabetha the Saboteur',\n          done: false,\n        },\n      ],\n    },\n    {\n      name: 'W2',\n      bosses: [\n        {\n          name: 'Slothasor',\n          done: false,\n        },\n        {\n          name: 'Prison Camp',\n          done: false,\n        },\n        {\n          name: 'Matthias Gabriel',\n          done: false,\n        },\n      ],\n    },\n    {\n      name: 'W3',\n      bosses: [\n        {\n          name: 'Siege the Stronghold',\n          done: false,\n        },\n        {\n          name: 'Keep Construct',\n          done: false,\n        },\n        {\n          name: 'Twisted Castle',\n          done: false,\n        },\n        {\n          name: 'Xera',\n        },\n      ],\n    },\n  ]\n\n  borders = []\n\n  constructor() {\n  }\n\n  ngOnInit(): void {\n    this.calculateBorders()\n  }\n\n  onStatusChange(wingIndex, bossIndex) {\n    const boss = this.wings[wingIndex].bosses[bossIndex]\n    boss.done = !boss.done\n  }\n\n  isWingDone(wingIndex: number) {\n    console.log('wykonanie')\n    const wing = this.wings[wingIndex]\n    for (let i = 0; i < wing.bosses.length; i++) {\n      if (!wing.bosses[i].done) {\n        return false\n      }\n    }\n\n    return true\n  }\n\n  private calculateBorders() {\n    const bossesCount = this.wings\n      .map(wing => wing.bosses.length)\n      .reduce(((previousValue, currentValue) => {\n        const style = {\n          'grid-row-start': 1 + previousValue,\n          'grid-row-end': 1 + previousValue + currentValue,\n        }\n        this.borders.push(style)\n        return previousValue + currentValue\n      }), 0)\n    console.log(this.borders, 'bc')\n  }\n\n}\n","<!--<table>-->\n<!--  <tr>-->\n<!--    <th>Wing</th>-->\n<!--    <th>Nazwa bossa</th>-->\n<!--    <th>Zrobiony?</th>-->\n<!--  </tr>-->\n<!--  <ng-container *ngFor=\"let wing of wings\">-->\n<!--    <tr *ngFor=\"let boss of wing.bosses; let i = index\">-->\n<!--      <td-->\n<!--          [rowSpan]=\"wing.bosses.length\"-->\n<!--          *ngIf=\"i === 0\">-->\n<!--        {{wing.name}}-->\n<!--      </td>-->\n<!--      <td>-->\n<!--        {{boss.name}}-->\n<!--      </td>-->\n<!--      <td>-->\n<!--        {{boss.done ? 'Skończone' : 'Do zrobienia'}}-->\n<!--      </td>-->\n<!--    </tr>-->\n<!--  </ng-container>-->\n\n<!--</table>-->\n<!--<br><br><br>-->\n\n<div class=\"table\">\n  <ng-container *ngFor=\"let wing of wings; let i = index\">\n    <ng-container *ngFor=\"let boss of wing.bosses; let j = index\">\n      <div class=\"table__wing\"\n           [ngClass]=\"{'table__cell--done': isWingDone(i)}\"\n           [ngStyle]=\"borders[i]\"\n           *ngIf=\"j === 0\">\n        {{wing.name}}\n      </div>\n      <div class=\"table__cell table__cell--boss-name\"\n           [ngClass]=\"{'table__cell--done': boss.done}\">\n        {{boss.name}}\n      </div>\n      <div class=\"table__cell table__cell--actions\"\n           [ngClass]=\"{'table__cell--done': boss.done}\">\n        <span>\n          <button (click)=\"onStatusChange(i, j)\">\n            <span class=\"material-icons\">\n              {{!boss.done ? 'close' : 'done'}}\n            </span>\n          </button>\n        </span>\n        <span>\n          <button>\n            <span class=\"material-icons\">cloud_upload</span>\n          </button>\n        </span>\n      </div>\n    </ng-container>\n  </ng-container>\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}